#!/usr/bin/env bash

# Global variables
readonly GXC_SCRIPT_PATH="$(test -L "${BASH_SOURCE[0]}" && readlink "${BASH_SOURCE[0]}" || echo "${BASH_SOURCE[0]}")"
readonly GXC_SCRIPT_DIR=$(cd "$(dirname "${GXC_SCRIPT_PATH}")"; pwd)

# brew install jq
: "${JQ:=$(command -v jq)}"
: "${OUTPUT_DIR:=$PWD}"

process_fragments() {
	local -a files=()
	for file in "$@"; do
		[[ -f "$file" ]] || continue

		# Fragments generated by clang have a comma before EOF
		# If a fragment is stil invalid after removing it, it should be skipped
		if sed -e '$s/,$//' "$file" | "$JQ" . > /dev/null; then
			echo "Processing: $file" >&2
			files+=("$file")
		else
			echo "Skipping: $file" >&2
		fi
	done

	if (( ${#files[@]} == 0 )); then
		echo "No input files found!" >&2
		return
	fi

	sed -e '1s/^/[\'$'\n''/' -e '$s/,$/\'$'\n'']/' "${files[@]}" > "${OUTPUT_DIR}/compile_commands.json"
}

generate_database() {
	echo "Running build command ..." >&2
	if grep -q 'OTHER_CFLAGS' <<< "$*"; then
		echo "OTHER_CLAGS detected in build command! This is unsupported as they will be overridden." >&2
		return 1
	fi

	# xcrun xcodebuild ...
	# https://reviews.llvm.org/D66555
	
	# Note: Some tools require extra cflags to properly parse the compilation database, e.g. Infer
	# OTHER_CFLAGS="\$(inherited) -DNS_FORMAT_ARGUMENT(A)= -D_Nullable_result=_Nullable -gen-cdb-fragment-path ${OUTPUT_DIR}/CompilationDatabase"
	"$@" COMPILER_INDEX_STORE_ENABLE=NO OTHER_CFLAGS="\$(inherited) -gen-cdb-fragment-path ${OUTPUT_DIR}/CompilationDatabase"
	process_fragments "${OUTPUT_DIR}/CompilationDatabase"/*.json
}

# main
if [[ "${BASH_SOURCE[0]}" != "$0" ]]; then
	echo "Script is being sourced: ${GXC_SCRIPT_PATH}"
else
	(( DEBUG == 0 )) || set -x
	set -euo pipefail

	if (( $# == 0 )); then
		cat <<-EOF
		Usage: $(basename "$0") <xcodebuild-command>
		Environment variables:
		JQ: Path to a jq binary
		OUTPUT_DIR: Writable directory for storing the result. Default: (\$PWD) - $PWD
		EOF

		exit 1
	fi

	generate_database "$@"
fi

# Example invocation
# gen-compile-flags.sh xcodebuild build -project TestProject.xcodeproj -target TestTarget -configuration Debug
#BRAZIL_WORKSPACE_PATH=~/workplace/mshop_ios1/src/MShopIOSContextualActions  xcodebuild build -workspace MShopIOSContextualActions.xcworkspace -configuration Debug -scheme MShopIOSContextualActions -sdk iphoneos
